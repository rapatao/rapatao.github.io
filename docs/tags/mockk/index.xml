<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mockk on rapatao.com</title><link>https://www.rapatao.com/tags/mockk/</link><description>Recent content in Mockk on rapatao.com</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 19 Jan 2022 22:00:00 -0300</lastBuildDate><atom:link href="https://www.rapatao.com/tags/mockk/index.xml" rel="self" type="application/rss+xml"/><item><title>Build tests using Kotlin, JUnit and MockK</title><link>https://www.rapatao.com/posts/2022-01/build-tests-using-kotlin-junit-mockk/</link><pubDate>Wed, 19 Jan 2022 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2022-01/build-tests-using-kotlin-junit-mockk/</guid><description>&lt;p>The main objective of building code tests in an application is to certify what was coded, that is, to guarantee that a given piece of code does what it should do.&lt;/p>
&lt;p>&lt;a href="https://junit.org/junit5/">JUnit&lt;/a> is one of the most used frameworks for building tests in &lt;a href="https://kotlinlang.org/">Kotlin&lt;/a> and &lt;a href="https://mockk.io/">MockK&lt;/a> to build &lt;em>mocks&lt;/em>, which would be like doubles of an object and have the function of simulating the behavior of a component.&lt;/p>
&lt;aside>
ðŸ’¡ The codes used in this text are available on GitHub: https://github.com/rapatao/blog-koltin-junit-mockk
&lt;/aside>
&lt;h2 id="dependÃªncias-utilizadas">DependÃªncias utilizadas&lt;/h2>
&lt;p>It is important to say that there are several ways to add support to the language and frameworks that we will use in this text. In the example below, only one of them will be presented, being basically how &lt;em>&lt;a href="https://www.jetbrains.com/idea/">IntelliJ IDEA&lt;/a>&lt;/em> initializes projects in &lt;em>Kotlin&lt;/em> + &lt;em>&lt;a href="https://gradle.org/">Gradle&lt;/a>&lt;/em>.&lt;/p></description></item></channel></rss>