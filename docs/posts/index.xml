<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on rapatao.com</title><link>https://www.rapatao.com/posts/</link><description>Recent content in Posts on rapatao.com</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 10 Nov 2023 17:00:00 +0000</lastBuildDate><atom:link href="https://www.rapatao.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Destructuring in Kotlin</title><link>https://www.rapatao.com/posts/2023-11/destructuring-in-kotlin/</link><pubDate>Fri, 10 Nov 2023 17:00:00 +0000</pubDate><guid>https://www.rapatao.com/posts/2023-11/destructuring-in-kotlin/</guid><description>&lt;p>&lt;strong>Destructuring&lt;/strong> is a programming concept that entails breaking down a complex data structure into its individual
components and assigning these components to individual variables directly in a single statement.&lt;/p>
&lt;p>As many other modern languages support it, but &lt;code>Kotlin&lt;/code>, at least when compared to &lt;code>JavaScript&lt;/code>, has a different
behavior when used on data classes.&lt;/p>
&lt;p>The purpose of this text is to talk about this difference, and how to prevent, as earlier as possible, mistakes that its
usage could cause to your code.&lt;/p></description></item><item><title>Contract-First VS Code-First API Documentation</title><link>https://www.rapatao.com/posts/2023-10/contract-first-vs-code-first-api-documentation/</link><pubDate>Sun, 08 Oct 2023 09:00:00 +0000</pubDate><guid>https://www.rapatao.com/posts/2023-10/contract-first-vs-code-first-api-documentation/</guid><description>&lt;p>API development is a crucial part of modern software development. Designing clear, robust, and easy-to-use APIs not only optimizes the development process but also enhances the developer experience. Various methodologies exist for API creation, the two significant approaches are the &lt;strong>Contract-First&lt;/strong> and &lt;strong>Code-First&lt;/strong> methods. This article explores these two approaches in depth.&lt;/p>
&lt;h2 id="contract-first-api-documentation">Contract-First API Documentation&lt;/h2>
&lt;p>Contract-first API development kicks off with the API definition. Developers outline all of the API endpoints, the request-response models, the data types, and any possible status codes. The driving principle here is to write an API contract before any code is written. This contract usually comes in a machine-readable format like &lt;a href="https://swagger.io">Swagger&lt;/a> (OpenAPI Spec), &lt;a href="https://raml.org">RAML&lt;/a>, and &lt;a href="https://apiblueprint.org">API Blueprint&lt;/a>.&lt;/p></description></item><item><title>CAP Theorem</title><link>https://www.rapatao.com/posts/2023-09/cap-theorem/</link><pubDate>Fri, 22 Sep 2023 09:00:00 +0000</pubDate><guid>https://www.rapatao.com/posts/2023-09/cap-theorem/</guid><description>&lt;p>CAP theorem is a fundamental principle in distributed database systems that states only two out of the three:
consistency, availability, and partition tolerance, can be achieved at any given time.&lt;/p>
&lt;h2 id="consistency">Consistency&lt;/h2>
&lt;p>In the context of the CAP theorem, consistency means that every read operation receives the most recent write or an
error. All database nodes will hold the same data at the same time.&lt;/p>
&lt;h2 id="availability">Availability&lt;/h2>
&lt;p>Availability means that each request made to the system either receives a valid response or error, regardless of the
state of the system. Every non-failed node returns a response in a reasonable amount of time, therefore maximizing
uptime.&lt;/p></description></item><item><title>Installing and using minikube</title><link>https://www.rapatao.com/posts/2023-07/installing-and-using-minikube/</link><pubDate>Sun, 09 Jul 2023 09:00:00 +0000</pubDate><guid>https://www.rapatao.com/posts/2023-07/installing-and-using-minikube/</guid><description>&lt;p>In my current project, we use &lt;em>Kubernetes&lt;/em> massively and with that, I needed to perform tests more than once to verify that my &lt;em>deployment&lt;/em> file was correct. Although there are environments that I could use to test, I decided to use &lt;em>minikube&lt;/em>, in order to carry out tests locally and not risk impacting other users/applications.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>The &lt;em>minikube&lt;/em> package is available for &lt;em>macOS&lt;/em>, &lt;em>Linux&lt;/em> and &lt;em>Windows&lt;/em> platforms, however, I will only demonstrate how to install it on &lt;em>macOS&lt;/em> using &lt;em>Homebrew&lt;/em>. If you want to install on other platforms or with a different method, just check the options &lt;a href="https://minikube.sigs.k8s.io/docs/start/">here&lt;/a>.&lt;/p></description></item><item><title>What is a Reverse Proxy?</title><link>https://www.rapatao.com/posts/2022-10/what-is-a-reverse-proxy/</link><pubDate>Sat, 22 Oct 2022 12:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2022-10/what-is-a-reverse-proxy/</guid><description>&lt;p>A reverse proxy is a server that has as its main functionality to receive requests from an external network, usually the Internet, and forward them to servers on an internal network.&lt;/p>
&lt;p>This server acts as the user&amp;rsquo;s entry point to your application, which allows you to perform various types of customization on the received request, such as changing the request parameters or rewriting the path (&lt;em>path&lt;/em>) in a &lt;em>REST&lt;/em> request.&lt;/p></description></item><item><title>What are Flaky Tests and why fix them!</title><link>https://www.rapatao.com/posts/2022-08/what-are-flaky-tests-and-why-fix-them/</link><pubDate>Sun, 28 Aug 2022 12:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2022-08/what-are-flaky-tests-and-why-fix-them/</guid><description>&lt;p>Building tests is surely one of the most difficult and time-consuming tasks for a developer, in addition to usually generating more lines of code than the added functionality. This is due to the various scenarios that need, or should, be verified.&lt;/p>
&lt;p>&lt;em>Flaky Tests&lt;/em>, are basically test cases created to verify a scenario, however, they can randomly present success and failure results, without having undergone any change, neither in the test case nor in the tested code.&lt;/p></description></item><item><title>GnuPG: how to backup and restore your keys?</title><link>https://www.rapatao.com/posts/2022-07/gnupg-how-to-backup-and-restore-your-keys/</link><pubDate>Sun, 31 Jul 2022 12:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2022-07/gnupg-how-to-backup-and-restore-your-keys/</guid><description>&lt;p>Recently, I had to transfer my private keys to a different computer. Since this looks like a trivial task (it was my first time doing it), I have decided to search for a &amp;ldquo;how-to&amp;rdquo; blog post that details the steps required for this task. After a few minutes, I got shocked that it seems to be a task that people don&amp;rsquo;t usually do, they seem to transfer only one key at once, never the whole key-ring.&lt;/p></description></item><item><title>What is a CDN (Content Delivery Network)?</title><link>https://www.rapatao.com/posts/2022-04/what-is-a-cdn-cdn-content-delivery-network/</link><pubDate>Thu, 21 Apr 2022 19:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2022-04/what-is-a-cdn-cdn-content-delivery-network/</guid><description>&lt;p>A &lt;em>Content Delivery Network&lt;/em>, can be described as a set of servers, distributed globally, with the purpose of providing content to users in an optimized way and in the shortest possible time.&lt;/p>
&lt;p>The CDN servers are distributed in several locations, some of these servers tend to be located closer to the destination user than the origin server, which makes the distance that the data travel (physically) is smaller, consequently, delivered more fast.&lt;/p></description></item><item><title>Load Balancing: What is a load balancer?</title><link>https://www.rapatao.com/posts/2022-02/load-balancing-what-is-a-load-balancer/</link><pubDate>Sat, 05 Feb 2022 20:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2022-02/load-balancing-what-is-a-load-balancer/</guid><description>&lt;p>Widely used in applications with high volume of simultaneous access, a load balancer is a computational resource used to perform load distribution between two or more servers of an application.&lt;/p>
&lt;p>They are usually implemented using machines dedicated to this work, which can be physical or virtual, or by “&lt;em>software&lt;/em>”.&lt;/p>
&lt;h2 id="benefits">Benefits&lt;/h2>
&lt;p>Regardless of the model to be implemented, they aim to distribute the processing of an application among the available instances, seeking to optimize the use of computational resources, such as network, processing (&lt;em>CPU&lt;/em>), memory usage, among others.&lt;/p></description></item><item><title>Build tests using Kotlin, JUnit and MockK</title><link>https://www.rapatao.com/posts/2022-01/build-tests-using-kotlin-junit-mockk/</link><pubDate>Wed, 19 Jan 2022 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2022-01/build-tests-using-kotlin-junit-mockk/</guid><description>&lt;p>The main objective of building code tests in an application is to certify what was coded, that is, to guarantee that a given piece of code does what it should do.&lt;/p>
&lt;p>&lt;a href="https://junit.org/junit5/">JUnit&lt;/a> is one of the most used frameworks for building tests in &lt;a href="https://kotlinlang.org/">Kotlin&lt;/a> and &lt;a href="https://mockk.io/">MockK&lt;/a> to build &lt;em>mocks&lt;/em>, which would be like doubles of an object and have the function of simulating the behavior of a component.&lt;/p>
&lt;aside>
💡 The codes used in this text are available on GitHub: https://github.com/rapatao/blog-koltin-junit-mockk
&lt;/aside>
&lt;h2 id="dependências-utilizadas">Dependências utilizadas&lt;/h2>
&lt;p>It is important to say that there are several ways to add support to the language and frameworks that we will use in this text. In the example below, only one of them will be presented, being basically how &lt;em>&lt;a href="https://www.jetbrains.com/idea/">IntelliJ IDEA&lt;/a>&lt;/em> initializes projects in &lt;em>Kotlin&lt;/em> + &lt;em>&lt;a href="https://gradle.org/">Gradle&lt;/a>&lt;/em>.&lt;/p></description></item><item><title>Optimizing tests in Spring Boot applications</title><link>https://www.rapatao.com/posts/2021-06/optimizing-tests-in-spring-boot-applications/</link><pubDate>Thu, 24 Jun 2021 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2021-06/optimizing-tests-in-spring-boot-applications/</guid><description>&lt;p>It is extremely common for applications built with Spring Boot to have all their tests annotated with &lt;code>@SpringBootTest&lt;/code>, but it is rare to find people who know the functionality of this annotation, when it is necessary to use it and its impact on the execution of an application&amp;rsquo;s tests.&lt;/p>
&lt;p>You probably thought that this annotation is for building tests, but do you know what it represents, what happens when it is used?&lt;/p></description></item><item><title>Thinking in GraalVM? Should I use Quarkus or Micronaut?</title><link>https://www.rapatao.com/posts/2021-03/thinking-in-graalvm-should-i-use-quarkus-or-micronaut/</link><pubDate>Wed, 24 Mar 2021 21:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2021-03/thinking-in-graalvm-should-i-use-quarkus-or-micronaut/</guid><description>&lt;p>Recently at work, we intended to use &lt;em>GraalVM&lt;/em> in a new application. Looking for compatible solutions, we saw that &lt;em>Quarkus&lt;/em> and &lt;em>Micronaut&lt;/em> looked promising and decided to analyze them.&lt;/p>
&lt;blockquote>
&lt;p>Note: When this analysis was performed, &lt;em>Spring&lt;/em> had very limited support for &lt;em>GraalVM&lt;/em> and was disregarded.&lt;/p>
&lt;/blockquote>
&lt;p>Among the options mentioned, several &lt;em>benchmarks&lt;/em> available on the Internet were consulted, in addition to verifying the &lt;strong>compatibility&lt;/strong> with tools and libraries normally used in the company&amp;rsquo;s projects. Other factors were analyzed, such as ease and quality of &lt;strong>documentation&lt;/strong> and &lt;strong>learning curve&lt;/strong> in these technologies.&lt;/p></description></item><item><title>Build virtual machines (VM's) using QEMU</title><link>https://www.rapatao.com/posts/2020-09/build-virtual-machines-using-qemu/</link><pubDate>Sun, 06 Sep 2020 21:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2020-09/build-virtual-machines-using-qemu/</guid><description>&lt;p>Recently I needed to perform some simple tests of an application that only worked on Windows and as I don&amp;rsquo;t have this environment, I decided to create a VM with Windows 10. My first idea was to use &lt;a href="https://www.virtualbox.org/">VirtualBox&lt;/a> , however, for some reason, I couldn&amp;rsquo;t start the installer at all, always generating a random error or else the screen was like the hiss of a TV, but colorful and without sound.&lt;/p></description></item><item><title>A list of Brazilian projects</title><link>https://www.rapatao.com/posts/2020-08/a-list-of-brazilian-projects/</link><pubDate>Fri, 21 Aug 2020 21:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2020-08/a-list-of-brazilian-projects/</guid><description>&lt;p>Every developer, at least once, must have come across &lt;strong>awesome lists&lt;/strong> calls. These lists try to bring together in one place projects related to a theme or libraries for which they were developed.&lt;/p>
&lt;p>Some examples of these lists are:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/java-lang/awesome-java">awesome-java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vinta/awesome-python">awesome-python&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vert-x3/vertx-awesome">vertx-awesome&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/sorrycc/awesome-javascript">awesome-javascript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/avelino/awesome-go">awesome-go&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>There are several other lists of this type, just search on GitHub and you will probably find one related to the topic you want. &lt;a href="https://github.com/topics/awesome">See several lists here&lt;/a>.&lt;/p></description></item><item><title>ACID Transactions</title><link>https://www.rapatao.com/posts/2020-08/acid-transactions/</link><pubDate>Tue, 18 Aug 2020 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2020-08/acid-transactions/</guid><description>&lt;h1 id="acid-transactions">ACID transactions&lt;/h1>
&lt;p>Acronym for &lt;strong>A&lt;/strong>tomicity, &lt;strong>C&lt;/strong>consistency, &lt;strong>I&lt;/strong>insulation and &lt;strong>D&lt;/strong>urability is a set of properties of a database transaction that aim to ensure data integrity and validity, even after systemic failures or electrical power failures.&lt;/p>
&lt;h3 id="atomicity">Atomicity&lt;/h3>
&lt;p>It treats as a unit, all operations performed for a task, that is, all instructions will be successfully carried out or, none of them should be carried out. For example, in a bank transfer, in case of failure in any of the steps, the entire process must be undone and the values returned to the original.&lt;/p></description></item><item><title>Your dotfiles under control</title><link>https://www.rapatao.com/posts/2020-08/your-dotfiles-under-control/</link><pubDate>Sat, 15 Aug 2020 15:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2020-08/your-dotfiles-under-control/</guid><description>&lt;p>Many developers throughout their career end up creating many &lt;em>scripts&lt;/em>, &lt;em>aliases&lt;/em> and customizations in their development environments. These settings are normally kept in files, and when this user changes their environment, they sometimes make a copy of these files to the new environment. This process tends to be done by copying your files from one environment to another.&lt;/p>
&lt;p>Although it works, there is a more practical way to manage these files, making the proper associations as needed, including supporting different profiles. That is, it is possible to create a &lt;em>dotfile&lt;/em> with different profiles, defining different settings according to your needs. An example of this use would be to build a profile for your personal environment, another for your professional environment, changing server access keys and &lt;em>commits&lt;/em> signature settings in &lt;em>git&lt;/em>.&lt;/p></description></item><item><title>Reactive programming with Spring WebFlux, should I use it?</title><link>https://www.rapatao.com/posts/2020-07/should-i-use-spring-webflux/</link><pubDate>Sun, 26 Jul 2020 19:33:23 -0300</pubDate><guid>https://www.rapatao.com/posts/2020-07/should-i-use-spring-webflux/</guid><description>&lt;p>&lt;strong>Should I use it?&lt;/strong>&lt;/p>
&lt;pre>&lt;code>No, but maybe so!
&lt;/code>&lt;/pre>
&lt;p>I could stop the article here, but that wouldn&amp;rsquo;t add anything and you would never understand why I start the text with a &lt;strong>no, but it may be yes&lt;/strong>. The truth is, if you hope to use &lt;em>WebFlux&lt;/em> and solve all your problems, I&amp;rsquo;m sorry to tell you that your problems may be just beginning.&lt;/p>
&lt;p>Recently the subject &lt;em>Advantages and Disadvantages about WebFlux&lt;/em> came up in my work and because I have little experience using &lt;em>WebFlux&lt;/em>, I decided to seek more information on the subject and I intend to describe here my opinion about the use of &lt;em>WebFlux&lt;/em> and, consequently, a little about reactive programming.&lt;/p></description></item><item><title>Verify vararg methods using Mockito</title><link>https://www.rapatao.com/posts/2020-05/verify-varargs-using-mockito/</link><pubDate>Thu, 14 May 2020 00:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2020-05/verify-varargs-using-mockito/</guid><description>&lt;p>Building tests is one of the most routine tasks for a developer and normally, with frameworks like jUnit and Mockito, this task tends to be carried out without great difficulties. Despite this, there are certain validations, which tend to be more complex, such as checking calls to methods with parameters of type &lt;em>varargs&lt;/em>.&lt;/p>
&lt;p>If you don&amp;rsquo;t know what &lt;em>varargs&lt;/em> is, you can roughly say that it is, the &amp;ldquo;&amp;hellip;&amp;rdquo; used in parameter declarations in methods, however, I recommend reading &lt;a href="https://www.geeksforgeeks.org/variable-arguments-varargs-in-java/">this article&lt;/a> for better understanding and viewing examples.&lt;/p></description></item></channel></rss>