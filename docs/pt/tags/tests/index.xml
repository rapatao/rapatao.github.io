<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tests on rapatao.com</title><link>https://www.rapatao.com/pt/tags/tests/</link><description>Recent content in tests on rapatao.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 19 Jan 2022 22:00:00 -0300</lastBuildDate><atom:link href="https://www.rapatao.com/pt/tags/tests/index.xml" rel="self" type="application/rss+xml"/><item><title>Construindo testes com Kotlin, JUnit e MockK</title><link>https://www.rapatao.com/pt/posts/2022-01/construindo-testes-com-kotlin-junit-mockk/</link><pubDate>Wed, 19 Jan 2022 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/pt/posts/2022-01/construindo-testes-com-kotlin-junit-mockk/</guid><description>A constru√ß√£o de testes de c√≥digo em uma aplica√ß√£o tem como principal objetivo certificar o que foi codificado, ou seja, garantir que um determinado trecho de c√≥digo faz o que deveria fazer.
JUnit √© um dos frameworks mais utilizados na constru√ß√£o de testes em Kotlin e MockK para constru√ß√£o de mocks, que seriam como dubl√™s de um objeto e tem como fun√ß√£o simular o comportamento de um componente.
üí° Os c√≥digo utilizados nesse texto est√£o dispon√≠veis no GitHub: https://github.</description></item><item><title>Otimizando testes em aplica√ß√µes com Spring Boot</title><link>https://www.rapatao.com/pt/posts/2021-06/otimizando-testes-em-aplicacoes-com-spring-boot/</link><pubDate>Thu, 24 Jun 2021 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/pt/posts/2021-06/otimizando-testes-em-aplicacoes-com-spring-boot/</guid><description>√â extremamente comum aplica√ß√µes constru√≠das com Spring Boot possuir todos seus testes anotados com @SpringBootTest, por√©m √© raro encontrar pessoas que sabem a funcionalidade dessa anota√ß√£o, quando √© necess√°ria sua utiliza√ß√£o e seu impacto na execu√ß√£o dos testes de uma aplica√ß√£o.
Voc√™ provavelmente deve ter pensado que essa anota√ß√£o serve para a constru√ß√£o de testes, mas voc√™ sabe o que isso representa, o que acontece quando ela √© utilizada?
Simploriamente, essa anota√ß√£o √© uma forma simplificada de adicionar uma extens√£o ao JUnit que visa inicializar o contexto do Spring antes da execu√ß√£o dos cen√°rios de testes declarados.</description></item><item><title>Verifica√ß√£o de varargs utilizando Mockito</title><link>https://www.rapatao.com/pt/posts/2020-05/verify-varargs-using-mockito/</link><pubDate>Thu, 14 May 2020 00:00:00 -0300</pubDate><guid>https://www.rapatao.com/pt/posts/2020-05/verify-varargs-using-mockito/</guid><description>Construir testes √© uma das tarefas mais rotineiras de um desenvolvedor e normalmente, com frameworks como jUnit e Mockito, esta tarefa tende a ser realizada sem grandes dificuldades. Apesar disso, existem certas valida√ß√µes, que costumam ter maior complexidade, como exemplo, verifica√ß√£o de chamadas a m√©todos com par√¢metros to tipo varargs.
Caso n√£o saiba o que √© varargs, pode-se dizer grosseiramente que √©, o &amp;ldquo;&amp;hellip;&amp;rdquo; utilizado nas declara√ß√µes de par√¢metros em m√©todos, por√©m, recomendo ler este artigo para melhor entendimento e visualiza√ß√£o de exemplos.</description></item></channel></rss>