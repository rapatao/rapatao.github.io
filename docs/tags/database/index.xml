<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on rapatao.com</title><link>https://www.rapatao.com/tags/database/</link><description>Recent content in Database on rapatao.com</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 22 Sep 2023 09:00:00 +0000</lastBuildDate><atom:link href="https://www.rapatao.com/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>CAP Theorem</title><link>https://www.rapatao.com/posts/2023-09/cap-theorem/</link><pubDate>Fri, 22 Sep 2023 09:00:00 +0000</pubDate><guid>https://www.rapatao.com/posts/2023-09/cap-theorem/</guid><description>&lt;p>CAP theorem is a fundamental principle in distributed database systems that states only two out of the three:
consistency, availability, and partition tolerance, can be achieved at any given time.&lt;/p>
&lt;h2 id="consistency">Consistency&lt;/h2>
&lt;p>In the context of the CAP theorem, consistency means that every read operation receives the most recent write or an
error. All database nodes will hold the same data at the same time.&lt;/p>
&lt;h2 id="availability">Availability&lt;/h2>
&lt;p>Availability means that each request made to the system either receives a valid response or error, regardless of the
state of the system. Every non-failed node returns a response in a reasonable amount of time, therefore maximizing
uptime.&lt;/p></description></item><item><title>ACID Transactions</title><link>https://www.rapatao.com/posts/2020-08/acid-transactions/</link><pubDate>Tue, 18 Aug 2020 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/posts/2020-08/acid-transactions/</guid><description>&lt;h1 id="acid-transactions">ACID transactions&lt;/h1>
&lt;p>Acronym for &lt;strong>A&lt;/strong>tomicity, &lt;strong>C&lt;/strong>consistency, &lt;strong>I&lt;/strong>insulation and &lt;strong>D&lt;/strong>urability is a set of properties of a database transaction that aim to ensure data integrity and validity, even after systemic failures or electrical power failures.&lt;/p>
&lt;h3 id="atomicity">Atomicity&lt;/h3>
&lt;p>It treats as a unit, all operations performed for a task, that is, all instructions will be successfully carried out or, none of them should be carried out. For example, in a bank transfer, in case of failure in any of the steps, the entire process must be undone and the values returned to the original.&lt;/p></description></item></channel></rss>