<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kafka on rapatao.com</title><link>https://www.rapatao.com/tags/kafka/</link><description>Recent content in Kafka on rapatao.com</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 05 Oct 2024 20:00:00 +0000</lastBuildDate><atom:link href="https://www.rapatao.com/tags/kafka/index.xml" rel="self" type="application/rss+xml"/><item><title>Fixing memory issues while running tests on Spring Boot using Kafka</title><link>https://www.rapatao.com/posts/2024-10/fixing-memory-issues-while-running-tests-on-spring-boot-using-kafka/</link><pubDate>Sat, 05 Oct 2024 20:00:00 +0000</pubDate><guid>https://www.rapatao.com/posts/2024-10/fixing-memory-issues-while-running-tests-on-spring-boot-using-kafka/</guid><description>&lt;p>Recently, I faced a problem in an application where it was taking too long to run its tests. After checking the reasons,
I found out that the embedded Kafka provided by Spring was consuming too much memory, making it hard for the GC to free
up space to allow all the remaining tests to execute.&lt;/p>
&lt;p>That embedded solution worked fine at the beginning of the project, where a few test cases really needed to use that
resource to validate its use cases. As soon as the project gets bigger and more test cases are required to use that
resource, an issue with the testing execution starts to show up, and the test execution time is drastically starting to
increase.&lt;/p></description></item></channel></rss>