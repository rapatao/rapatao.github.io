<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>architecture on rapatao.com</title><link>https://www.rapatao.com/tags/architecture/</link><description>Recent content in architecture on rapatao.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 05 Feb 2022 20:00:00 -0300</lastBuildDate><atom:link href="https://www.rapatao.com/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Load Balancing: O que é um balanceador de carga?</title><link>https://www.rapatao.com/pt/posts/2022-01/load-balancing-o-que-e-um-balanceador-de-carga/</link><pubDate>Sat, 05 Feb 2022 20:00:00 -0300</pubDate><guid>https://www.rapatao.com/pt/posts/2022-01/load-balancing-o-que-e-um-balanceador-de-carga/</guid><description>Muito utilizado em aplicações com alto volume de acesso simultâneo, um balanceado de carga (load balancer) é um recurso computacional utilizado para realizar a distribuição de carga entre dois ou mais servidores de uma aplicação.
Normalmente são implementados com uso de máquinas dedicadas para esse trabalho, podendo elas serem físicas ou virtuais, ou por “softwares”.
Benefícios Independente do modelo a ser implementado, eles visam distribuir o processamento de uma aplicação entre as instâncias disponíveis, onde se busca otimizar o uso de recursos computacionais, como rede, processamento (CPU), uso de memória, entre outros.</description></item><item><title>Pensando em GraalVM? Devo escolher Quarkus ou Micronaut?</title><link>https://www.rapatao.com/pt/posts/2021-03/pensando-em-graalvm-devo-escolher-quarkus-ou-micronaut/</link><pubDate>Wed, 24 Mar 2021 21:00:00 -0300</pubDate><guid>https://www.rapatao.com/pt/posts/2021-03/pensando-em-graalvm-devo-escolher-quarkus-ou-micronaut/</guid><description>Recentemente no trabalho, pretendíamos utilizar GraalVM em uma nova aplicação. Buscando soluções compatíveis, vimos que Quarkus e Micronaut pareciam promissores e decidimos analisa-los.
Nota: Quando essa analise foi realizada, Spring possuía um suporte muito limitado ao GraalVM e foi desconsiderado.
Dentre as opções citadas, diversos benchmarks disponíveis na Internet foram consultados, além de verificado a compatibilidade com ferramentas e bibliotecas normalmente utilizadas nos projetos da empresa. Outros fatores foram analisados, como facilidade e qualidade da documentação e curva de aprendizado nessas tecnologias.</description></item></channel></rss>