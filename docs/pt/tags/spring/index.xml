<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring on rapatao.com</title><link>https://www.rapatao.com/pt/tags/spring/</link><description>Recent content in Spring on rapatao.com</description><generator>Hugo</generator><language>pt</language><lastBuildDate>Thu, 24 Jun 2021 22:00:00 -0300</lastBuildDate><atom:link href="https://www.rapatao.com/pt/tags/spring/index.xml" rel="self" type="application/rss+xml"/><item><title>Otimizando testes em aplicações com Spring Boot</title><link>https://www.rapatao.com/pt/posts/2021-06/otimizando-testes-em-aplicacoes-com-spring-boot/</link><pubDate>Thu, 24 Jun 2021 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/pt/posts/2021-06/otimizando-testes-em-aplicacoes-com-spring-boot/</guid><description>&lt;p>É extremamente comum aplicações construídas com Spring Boot possuir todos seus testes anotados com &lt;code>@SpringBootTest&lt;/code>, porém é raro encontrar pessoas que sabem a funcionalidade dessa anotação, quando é necessária sua utilização e seu impacto na execução dos testes de uma aplicação.&lt;/p>
&lt;p>Você provavelmente deve ter pensado que essa anotação serve para a construção de testes, mas você sabe o que isso representa, o que acontece quando ela é utilizada?&lt;/p>
&lt;p>Simploriamente, essa anotação é uma forma simplificada de adicionar uma extensão ao &lt;a href="https://junit.org/junit5/docs/current/user-guide/#extensions">JUnit&lt;/a> que visa inicializar o contexto do Spring antes da execução dos cenários de testes declarados. Com sua utilização, antes de uma classe de teste ser executada, é realizado uma busca na aplicação pela classe anotada com &lt;code>@SpringBootApplication&lt;/code> para identificar possíveis customizações, carregado as configurações para o perfil de teste (quando não sobrescrito) e somente após o contexto ser inicializado, temos o método com o cenário executado.&lt;/p></description></item><item><title>Programação reativa com Spring WebFlux, devo utilizar?</title><link>https://www.rapatao.com/pt/posts/2020-07/should-i-use-spring-webflux/</link><pubDate>Sun, 26 Jul 2020 19:33:23 -0300</pubDate><guid>https://www.rapatao.com/pt/posts/2020-07/should-i-use-spring-webflux/</guid><description>&lt;p>&lt;strong>Devo utilizar?&lt;/strong>&lt;/p>
&lt;pre>&lt;code>Não, mas pode ser que sim!
&lt;/code>&lt;/pre>
&lt;p>Eu poderia parar o artigo aqui, mas isso não iria agregar em nada e você jamais iria entender o motivo de eu começar o texto com um &lt;strong>não, mas pode ser que sim&lt;/strong>. A verdade é que se você espera utilizar &lt;em>WebFlux&lt;/em> e resolver todos os seus problemas, sinto lhe dizer que seus problemas podem estar só começando.&lt;/p>
&lt;p>Recentemente o assunto &lt;em>Vantagens e Desvantagens sobre o WebFlux&lt;/em> surgiu em meu trabalho e por ter pouca experiência utilizando &lt;em>WebFlux&lt;/em>, resolvi buscar mais informações sobre o assunto e pretendo descrever aqui minha opinião sobre a utilização de &lt;em>WebFlux&lt;/em> e por consequência, um pouco sobre programação reativa.&lt;/p></description></item></channel></rss>