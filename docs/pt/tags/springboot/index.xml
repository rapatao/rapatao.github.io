<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>springboot on rapatao.com</title><link>https://www.rapatao.com/pt/tags/springboot/</link><description>Recent content in springboot on rapatao.com</description><generator>Hugo -- gohugo.io</generator><language>pt</language><lastBuildDate>Thu, 24 Jun 2021 22:00:00 -0300</lastBuildDate><atom:link href="https://www.rapatao.com/pt/tags/springboot/index.xml" rel="self" type="application/rss+xml"/><item><title>Otimizando testes em aplicações com Spring Boot</title><link>https://www.rapatao.com/pt/posts/2021-06/otimizando-testes-em-aplicacoes-com-spring-boot/</link><pubDate>Thu, 24 Jun 2021 22:00:00 -0300</pubDate><guid>https://www.rapatao.com/pt/posts/2021-06/otimizando-testes-em-aplicacoes-com-spring-boot/</guid><description>É extremamente comum aplicações construídas com Spring Boot possuir todos seus testes anotados com @SpringBootTest, porém é raro encontrar pessoas que sabem a funcionalidade dessa anotação, quando é necessária sua utilização e seu impacto na execução dos testes de uma aplicação.
Você provavelmente deve ter pensado que essa anotação serve para a construção de testes, mas você sabe o que isso representa, o que acontece quando ela é utilizada?
Simploriamente, essa anotação é uma forma simplificada de adicionar uma extensão ao JUnit que visa inicializar o contexto do Spring antes da execução dos cenários de testes declarados.</description></item></channel></rss>